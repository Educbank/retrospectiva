basePath: /api/v1
definitions:
  educ-retro_internal_models.Retrospective:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      ended_at:
        type: string
      id:
        type: string
      scheduled_at:
        type: string
      started_at:
        type: string
      status:
        $ref: '#/definitions/educ-retro_internal_models.RetrospectiveStatus'
      template:
        $ref: '#/definitions/educ-retro_internal_models.RetrospectiveTemplate'
      title:
        type: string
      updated_at:
        type: string
    type: object
  educ-retro_internal_models.RetrospectiveCreateRequest:
    properties:
      description:
        type: string
      template:
        $ref: '#/definitions/educ-retro_internal_models.RetrospectiveTemplate'
      title:
        type: string
    required:
    - template
    - title
    type: object
  educ-retro_internal_models.RetrospectiveStatus:
    enum:
    - planned
    - active
    - collecting
    - voting
    - discussing
    - closed
    type: string
    x-enum-varnames:
    - RetroStatusPlanned
    - RetroStatusActive
    - RetroStatusCollecting
    - RetroStatusVoting
    - RetroStatusDiscussing
    - RetroStatusClosed
  educ-retro_internal_models.RetrospectiveTemplate:
    enum:
    - start_stop_continue
    - 4ls
    - mad_sad_glad
    - sailboat
    - went_well_to_improve
    type: string
    x-enum-comments:
      Template4Ls: Liked, Learned, Lacked, Longed for
    x-enum-descriptions:
    - ""
    - Liked, Learned, Lacked, Longed for
    - ""
    - ""
    - ""
    x-enum-varnames:
    - TemplateStartStopContinue
    - Template4Ls
    - TemplateMadSadGlad
    - TemplateSailboat
    - TemplateWentWellToImprove
  educ-retro_internal_models.UserCreateRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  educ-retro_internal_models.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  educ-retro_internal_models.UserResponse:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  educ-retro_internal_services.TemplateCategory:
    properties:
      color:
        type: string
      description:
        type: string
      icon:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  educ-retro_internal_services.TemplateDefinition:
    properties:
      categories:
        items:
          $ref: '#/definitions/educ-retro_internal_services.TemplateCategory'
        type: array
      description:
        type: string
      id:
        type: string
      instructions:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API para sistema de retrospectivas educacionais
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Educ Retro API
  version: "1.0"
paths:
  /api/v1/templates/{id}:
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific template
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Template details
          schema:
            $ref: '#/definitions/educ-retro_internal_services.TemplateDefinition'
        "400":
          description: Invalid template ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Template not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get specific template
      tags:
      - templates
  /api/v1/templates/{id}/categories:
    get:
      consumes:
      - application/json
      description: Get categories for a specific template
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Template categories
          schema:
            items:
              $ref: '#/definitions/educ-retro_internal_services.TemplateCategory'
            type: array
        "400":
          description: Invalid template ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Template not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get template categories
      tags:
      - templates
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password, return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/educ-retro_internal_models.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account with email, name and password
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/educ-retro_internal_models.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: User already exists
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Authentication
  /retrospectives:
    get:
      consumes:
      - application/json
      description: Get all retrospectives created by or participated in by the current
        user
      produces:
      - application/json
      responses:
        "200":
          description: User's retrospectives
          schema:
            items:
              $ref: '#/definitions/educ-retro_internal_models.Retrospective'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user's retrospectives
      tags:
      - Retrospectives
    post:
      consumes:
      - application/json
      description: Create a new retrospective session
      parameters:
      - description: Retrospective creation data
        in: body
        name: retrospective
        required: true
        schema:
          $ref: '#/definitions/educ-retro_internal_models.RetrospectiveCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Retrospective created successfully
          schema:
            $ref: '#/definitions/educ-retro_internal_models.Retrospective'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Access denied
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new retrospective
      tags:
      - Retrospectives
  /retrospectives/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a retrospective
      parameters:
      - description: Retrospective ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Retrospective deleted successfully
        "400":
          description: Invalid retrospective ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Access denied
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete retrospective
      tags:
      - Retrospectives
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific retrospective
      parameters:
      - description: Retrospective ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Retrospective details
          schema:
            $ref: '#/definitions/educ-retro_internal_models.Retrospective'
        "400":
          description: Invalid retrospective ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Access denied
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Retrospective not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get retrospective details
      tags:
      - Retrospectives
    put:
      consumes:
      - application/json
      description: Update retrospective information
      parameters:
      - description: Retrospective ID
        in: path
        name: id
        required: true
        type: string
      - description: Retrospective update data
        in: body
        name: retrospective
        required: true
        schema:
          $ref: '#/definitions/educ-retro_internal_models.RetrospectiveCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated retrospective
          schema:
            $ref: '#/definitions/educ-retro_internal_models.Retrospective'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Access denied
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update retrospective
      tags:
      - Retrospectives
  /retrospectives/{id}/end:
    post:
      consumes:
      - application/json
      description: End a retrospective session
      parameters:
      - description: Retrospective ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Retrospective ended successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid retrospective ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Access denied
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: End retrospective
      tags:
      - Retrospectives
  /retrospectives/{id}/export:
    get:
      consumes:
      - application/json
      description: Export a retrospective to PDF format (only accessible by the creator)
      parameters:
      - description: Retrospective ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/pdf
      responses:
        "200":
          description: PDF file
          schema:
            type: file
        "400":
          description: Invalid retrospective ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Access denied - only creator can export
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Retrospective not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Export retrospective to PDF
      tags:
      - Retrospectives
  /retrospectives/{id}/start:
    post:
      consumes:
      - application/json
      description: Start a retrospective session
      parameters:
      - description: Retrospective ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Retrospective started successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid retrospective ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Access denied
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Start retrospective
      tags:
      - Retrospectives
  /templates:
    get:
      consumes:
      - application/json
      description: Get all available templates for retrospectives
      produces:
      - application/json
      responses:
        "200":
          description: Available templates
          schema:
            items:
              $ref: '#/definitions/educ-retro_internal_services.TemplateDefinition'
            type: array
      summary: Get available retrospective templates
      tags:
      - Templates
  /users/profile:
    get:
      consumes:
      - application/json
      description: Get current user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: User profile
          schema:
            $ref: '#/definitions/educ-retro_internal_models.UserResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update current user's profile information (name and avatar)
      parameters:
      - description: Profile update data
        in: body
        name: profile
        required: true
        schema:
          properties:
            avatar:
              type: string
            name:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Updated user profile
          schema:
            $ref: '#/definitions/educ-retro_internal_models.UserResponse'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user profile
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
